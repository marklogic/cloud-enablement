{
  "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
  "contentVersion": "9.0-3",
  "parameters": {
    "vmSetting": {
      "type": "object"
    }
  },
  "variables": {
    "vnetId": "[resourceId('Microsoft.Network/virtualNetworks', parameters('vmSetting').vnetName)]",
    "subnetId": "[concat(variables('vnetId'), '/subnets/', parameters('vmSetting').subnetName)]"
  },
  "resources": [
    {
      "apiVersion": "[parameters('vmSetting').computeApiVersion]",
      "type": "Microsoft.Compute/virtualMachines",
      "name": "[concat(parameters('vmSetting').name,'-',copyIndex())]",
      "location": "[parameters('vmSetting').location]",
      "copy": {
        "name": "vmLoop",
        "count": "[parameters('vmSetting').count]"
      },
      "plan": {
        "name": "[parameters('vmSetting').imageSku]",
        "publisher": "[parameters('vmSetting').imagePublisher]",
        "product": "[parameters('vmSetting').imageOffer]"
      },
      "properties": {
        "availabilitySet": {
          "id": "[resourceId('Microsoft.Compute/availabilitySets', parameters('vmSetting').availabilitySetName)]"
        },
        "hardwareProfile": {
          "vmSize": "[parameters('vmSetting').vmSize]"
        },
        "osProfile": {
          "computername": "[concat(parameters('vmSetting').name,'-',copyIndex())]",
          "adminUsername": "[parameters('vmSetting').adminUsername]",
          "linuxConfiguration": {
            "disablePasswordAuthentication": "true",
            "ssh": {
              "publicKeys": [
                {
                  "path": "[concat('/home/',parameters('vmSetting').adminUsername,'/.ssh/authorized_keys')]",
                  "keyData": "[parameters('vmSetting').sshKey]"
                }
              ]
            }
          }
        },
        "storageProfile": {
          "imageReference": {
            "publisher": "[parameters('vmSetting').imagePublisher]",
            "offer": "[parameters('vmSetting').imageOffer]",
            "sku": "[parameters('vmSetting').imageSku]",
            "version": "[parameters('vmSetting').imageVersion]"
          },
          "osDisk": {
            "name": "[concat(parameters('vmSetting').name,'-osDisk')]",
            "vhd": {
              "uri": "[concat('http://', parameters('vmSetting').osDiskStorageAccountName, '.blob.core.windows.net/',variables('vmStorageAccountContainerName'),copyIndex(),'/', variables('vmName'),'-osdisk.vhd')]"
            },
            "caching": "ReadWrite",
            "createOption": "FromImage"
          },
          "dataDisks": [
            {
              "name": "[concat(variables('vmName'),'-datadisk0')]",
              "diskSizeGB": "[variables('dataDiskSizeGB')]",
              "lun": 0,
              "vhd": {
                "Uri": "[concat('http://', variables('dataDiskStorageAccountName'), '.blob.core.windows.net/',variables('vmStorageAccountContainerName'),copyIndex(),'/', variables('vmName'),'-datadisk.vhd')]"
              },
              "createOption": "Empty"
            }
          ]
        },
        "networkProfile": {
          "networkInterfaces": [
            {
              "id": "[resourceId('Microsoft.Network/networkInterfaces', concat(variables('networkInterfaceName'), copyIndex()))]"
            }
          ]
        }
      }
    },
    {
        "name": "[parameters('vmSetting').networkInterfaceName]",
        "type": "Microsoft.Network/networkInterfaces",
        "apiVersion": "[parameters('vmSetting').networkInterfaceName.apiVersion]",
        "location": "[parameters('vmSetting').location]",
        "dependsOn": [],
        "properties": {
            "ipConfigurations": [
                {
                    "name": "ipconfig1",
                    "properties": {
                        "subnet": {
                            "id": "[variables('subnetId')]"
                        },
                        "privateIPAllocationMethod": "Static",
                        "publicIpAddress": {
                            "id": "[resourceId('Microsoft.Network/publicIpAddresses', parameters('publicIpAddressName'))]"
                        }
                    }
                }
            ],
            "networkSecurityGroup": {
                "id": "[resourceId('Microsoft.Network/networkSecurityGroups', parameters('vmSetting').networkSecurityGroupName)]"
            }
        }
    }
  ]
}